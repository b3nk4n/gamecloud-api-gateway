logging:
  level:
    io.github.resilience4j: DEBUG

server:
  port: 9000
  netty:
    connection-timeout: 3s
    idle-timeout: 20s
  shutdown: graceful

spring:
  application:
    name: api-gateway
  lifecycle:
    timeout-per-shutdown-phase: 20s
  config:
    import: "optional:configserver:"
  session:
    # https://docs.spring.io/spring-session/reference/guides/boot-redis.html#boot-spring-configuration
    store-type: redis # to disable Redis session management in a test, set it to "none" (e.g. via @TestPropertySource or YAML file)
    timeout: 10m
    redis:
      namespace: gamecloud:api
  cloud:
    gateway:
      routes:
        - id: catalog-service
          uri: ${CATALOG_SERVICE_URL:http://localhost:9001}/games
          predicates:
            - Path=/games/**
          filters:
            - name: CircuitBreaker
              args:
                name: catalogCircuitBreaker
                fallbackUri: forward:/catalog-fallback
        - id: order-service
          uri: ${ORDER_SERVICE_URL:http://locahost:9002}/orders
          predicates:
            - Path=/order/**
          filters:
            - name: CircuitBreaker
              args:
                name: orderCircuitBreaker
      httpclient:
        connect-timeout: 3000
        response-timeout: 5s
        pool:
          type: elastic
          max-idle-time: 20s
          max-life-time: 60s
      default-filters:
        - name: SaveSession
        - name: RequestRateLimiter
          args:
            redis-rate-limiter:
              replenishRate: 10
              burstCapacity: 20
              requestedTokens: 1
        - name: Retry
          args:
            retries: 3
            methods: GET
            series: SERVER_ERROR
            exceptions: java.io.IOException, java.util.concurrent.TimeoutException
            backoff:
              firstBackoff: 100ms
              maxBackoff: 5s
              factor: 2
              basedOnPreviousValue: false
  data:
    redis:
      connect-timeout: 3s
      host: localhost
      port: 6379
      timeout: 1s
  security:
    oauth2:
      client:
        registration:
          keycloak: # registrationId in Spring Security
            client-id: api-gateway
            client-secret: gamecloud-keycloak-secret
            scope: openid
        provider:
          keycloak: # registrationId in Spring Security
            issuer-uri: http://localhost:8080/realms/GameCloud
resilience4j:
  circuitbreaker:
    configs:
      default:
        slidingWindowSize: 20
        permittedNumberOfCallsInHalfOpenState: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 10000
  timelimiter:
    configs:
      default:
        timeoutDuration: 5s

management:
  endpoints:
    web:
      exposure:
        include: refresh
